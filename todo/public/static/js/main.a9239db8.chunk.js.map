{"version":3,"sources":["reducers/todos.js","actions/index.js","reducers/filter.js","reducers/index.js","components/AddTodo.js","components/Todo.js","components/TodoList.js","components/Filter.js","components/About.js","App.js","index.js"],"names":["todos","state","action","type","todo","old","find","id","map","td","title","completed","filter","console","error","name","details","baseUrl","requestFail","request","url","method","data","okAction","failAction","dispatch","fetch","headers","body","JSON","stringify","then","res","ok","json","catch","getTodosOk","addTodoOk","toggleTodoOk","updateTodoOk","Filters","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","combineReducers","connect","input","onSubmit","e","preventDefault","value","trim","ref","node","Todo","editing","props","startEdit","setState","updateTitle","event","target","updateTodo","cancelEdit","this","toggleTodo","deleteTodo","className","checked","disabled","onChange","onClick","style","textDecoration","Component","TodoList","getTodos","filterTodo","key","deleteTodoOk","setFilter","Object","values","ft","About","Fragment","App","exact","to","path","component","store","createStore","rootReducer","applyMiddleware","thunk","render","document","getElementById"],"mappings":"sQA+BeA,EA/BD,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAClC,OAAQA,EAAOC,MACX,IAAK,YACD,OAAO,YACAD,EAAOF,OAElB,IAAK,WACD,MAAM,GAAN,mBACOC,GADP,gBAESC,EAAOE,QAEpB,IAAK,cACD,IAAIC,EAAMJ,EAAMK,MAAK,SAAAF,GAAI,OAAIA,EAAKG,KAAOL,EAAOK,MAChD,OAAON,EAAMO,KAAI,SAAAC,GAAE,OAAIA,EAAGF,KAAOL,EAAOK,GAAjB,2BACZF,GADY,IACPK,MAAOR,EAAOQ,QACxBD,KACV,IAAK,cACD,IAAIL,EAAOH,EAAMK,MAAK,SAAAF,GAAI,OAAIA,EAAKG,KAAOL,EAAOK,MACjD,OAAON,EAAMO,KAAI,SAAAC,GAAE,OAAIA,EAAGF,KAAOL,EAAOK,GAAjB,2BACZH,GADY,IACNO,UAAWT,EAAOS,YAC7BF,KACV,IAAK,cACD,OAAO,YAAIR,EAAMW,QAAO,SAAAH,GAAE,OAAIA,EAAGF,KAAOL,EAAOK,OACnD,IAAK,eAGD,OADAM,QAAQC,MAAM,eAAgBZ,EAAOa,KAAMb,EAAOc,SAC3Cf,EACX,QACI,OAAOA,IC3BbgB,EAAU,kCAEHC,EAAc,SAACH,EAAMC,GAAP,MAAoB,CAC3Cb,KAAM,eACNY,OACAC,YAIEG,EAAU,SAAC,GAAD,QACZC,WADY,MACNH,EADM,MAEZI,cAFY,MAEH,MAFG,EAGZC,EAHY,EAGZA,KACAC,EAJY,EAIZA,SAJY,IAKZC,kBALY,MAKCN,EALD,SAMN,SAAAO,GAAQ,OACdC,MAAMN,EAAK,CACPC,OAAQA,EACRM,QAAS,CACL,eAAgB,oBAEpBC,KAAMN,GAAQO,KAAKC,UAAUR,KAEhCS,MAAK,SAAAC,GACF,GAAIA,EAAIC,GACJ,OAAOD,EAAIE,OAEf,MAAMF,KAETD,MAAK,SAAAC,GAAG,OAAIP,EAASF,EAASS,OAC9BG,OAAM,SAAArB,GAAK,OAAIW,EAASD,EAAWH,EAAS,IAAMD,EAAKN,SAE/CsB,EAAa,SAAApC,GAAK,MAAK,CAChCG,KAAM,YACNH,UAQSqC,EAAY,SAAAjC,GAAI,MAAK,CAC9BD,KAAM,WACNC,SAYSkC,EAAe,SAAC,GAAD,MAAsB,CAC9CnC,KAAM,cACNI,GAFwB,EAAEA,GAG1BI,UAHwB,EAAMA,YAerB4B,EAAe,SAAC,GAAD,MAAkB,CAC1CpC,KAAM,cACNI,GAFwB,EAAEA,GAG1BG,MAHwB,EAAMA,QAgCrB8B,EAAU,CACnBC,SAAU,WACVC,eAAgB,iBAChBC,YAAa,eCjGF/B,EARA,WAAuC,IAAtCX,EAAqC,uDAA7BuC,EAAQC,SAAUvC,EAAW,uCACjD,OAAQA,EAAOC,MACX,IAAK,aACD,OAAOD,EAAOU,OAClB,QACI,OAAOX,ICHJ2C,cAAgB,CAC3B5C,QACAY,W,eCqBWiC,G,MAAAA,eAvBC,SAAC,GAAkB,IAC3BC,EADWrB,EAAe,EAAfA,SAEf,OACI,6BACI,0BACIsB,SAAU,SAAAC,GHuCH,IAAAtC,GGtCHsC,EAAEC,iBACGH,EAAMI,MAAMC,UAGjB1B,GHkCGf,EGlCcoC,EAAMI,MHkCX/B,EAAQ,CACpCE,OAAQ,OACRE,SAAUc,EACVf,KAAO,CACHZ,QACAC,WAAW,OGtCCmC,EAAMI,MAAQ,MAIlB,2BAAOE,IAAK,SAAAC,GAAI,OAAKP,EAAQO,KAC7B,4BAAQlD,KAAK,UAAb,kB,gCChBKmD,G,kNASjBrD,MAAQ,CACJsD,SAAS,EACT7C,MAAO,EAAK8C,MAAM9C,O,EAGtB+C,UAAY,WACR,EAAKC,SAAS,CACVH,SAAS,EACT7C,MAAO,EAAK8C,MAAM9C,S,EAI1BiD,YAAc,SAAAC,GACV,EAAKF,SAAS,CACVhD,MAAOkD,EAAMC,OAAOX,S,EAI5BY,WAAa,WACT,EAAKJ,SAAS,CACVH,SAAS,IAEb,EAAKC,MAAMM,WAAW,EAAK7D,MAAMS,Q,EAGrCqD,WAAa,WACT,EAAKL,SAAS,CACVH,SAAS,EACT7C,MAAO,M,uDAIL,IAAD,EACgDsD,KAAKR,MAAlD9C,EADH,EACGA,MAAOC,EADV,EACUA,UAAWsD,EADrB,EACqBA,WAAYC,EADjC,EACiCA,WACtC,OACI,6BACKF,KAAK/D,MAAMsD,QACN,yBAAKY,UAAU,gBACb,2BAAOhE,KAAK,WAAWiE,QAASzD,EAAW0D,UAAQ,IACnD,2BAAOlE,KAAK,OAAO+C,MAAOc,KAAK/D,MAAMS,MAAO4D,SAAUN,KAAKL,cAC3D,4BAAQY,QAASP,KAAKF,YAAtB,UACA,4BAAQS,QAASP,KAAKD,YAAtB,WAEF,yBAAKI,UAAU,YACb,2BAAOhE,KAAK,WAAWiE,QAASzD,EAAW2D,SAAUL,IACrD,yBACIO,MAAO,CAACC,eAAgB9D,EAAY,eAAiB,OAAO,aAAgB,YAC5E4D,QAASP,KAAKP,WAEb/C,GAEL,6BACI,4BAAQ6D,QAASL,GAAjB,Y,GA7DMQ,cCE5BC,E,mLAGEC,EADqBZ,KAAKR,MAAlBoB,c,+BAIF,IAAD,EACyDZ,KAAKR,MAA3DxD,EADH,EACGA,MAAOY,EADV,EACUA,OAAQqD,EADlB,EACkBA,WAAYH,EAD9B,EAC8BA,WAAYI,EAD1C,EAC0CA,WAa/C,OACI,6BACKlE,EAAMY,QAAO,SAAAR,GAAI,OAbP,SAACA,GAChB,OAAOQ,GACH,KAAK4B,EAAQE,eACT,OAA0B,IAAnBtC,EAAKO,UAChB,KAAK6B,EAAQG,YACT,OAA0B,IAAnBvC,EAAKO,UAChB,QACI,OAAO,GAMWkE,CAAWzE,MAC5BI,KAAI,SAAAJ,GAAI,OACT,kBAAC,EAAD,eACI0E,IAAK1E,EAAKG,IACNH,EAFR,CAGI6D,WAAY,kBAAMA,EAAW7D,EAAKG,IAAKH,EAAKO,YAC5CmD,WAAY,SAAApD,GAAK,OAAIoD,EAAW1D,EAAKG,GAAIG,IACzCwD,WAAY,kBAAMA,EAAW9D,EAAKG,gB,GA7BnCmE,aAkDR7B,eAbS,SAAA5C,GAAK,MAAK,CAC9BD,MAAOC,EAAMD,MACbY,OAAQX,EAAMW,WAGS,SAAAa,GAAQ,MAAK,CACpCmD,SAAU,kBAAMnD,ELXUN,EAAQ,CAClCC,IAAKH,EAAU,YACfM,SAAUa,MKUV6B,WAAY,SAAC1D,EAAII,GAAL,OAAmBc,ELaT,SAAClB,EAAII,GAAL,OAAmBQ,EAAQ,CACjDC,IAAKH,EAAU,IAAMV,EACrBc,OAAQ,MACRE,SAAUe,EACVhB,KAAM,CACFX,eKlBoCsD,CAAW1D,EAAII,KACvDmD,WAAY,SAACvD,EAAIG,GAAL,OAAee,EL2BL,SAAClB,EAAIG,GAAL,OAAeS,EAAQ,CAC7CC,IAAKH,EAAU,IAAMV,EACrBc,OAAQ,MACRE,SAAUgB,EACVjB,KAAM,CACFZ,WKhCgCoD,CAAWvD,EAAIG,KACnDwD,WAAY,SAAA3D,GAAE,OAAIkB,ELwCI,SAAAlB,GAAE,OAAIY,EAAQ,CACpCC,IAAKH,EAAU,IAAMV,EACrBc,OAAQ,SACRE,SAAU,kBARc,SAAAhB,GAAE,MAAK,CAC/BJ,KAAM,cACNI,MAMgBwE,CAAaxE,IAC7Be,KAAM,KK5CqB4C,CAAW3D,QAI3BsC,CAA6C8B,GC5B7C9B,eARS,SAAA5C,GAAK,MAAK,CAC9BW,OAAQX,EAAMW,WAGS,SAAAa,GAAQ,MAAK,CACpCuD,UAAW,SAAApE,GAAM,OAAIa,EN0EA,SAAAb,GAAM,MAAK,CAChCT,KAAM,aACNS,UM5E8BoE,CAAUpE,QAG7BiC,EAxBA,SAAC,GAA2B,IAAzBjC,EAAwB,EAAxBA,OAAQoE,EAAgB,EAAhBA,UACtB,OACI,6BACKC,OAAOC,OAAO1C,GAAShC,KAAI,SAAA2E,GAAE,OAC1B,4BACIL,IAAKK,EACLd,SAAUc,IAAOvE,EACjB2D,QAAS,kBAAMS,EAAUG,KAExBA,UCXN,SAASC,IACpB,OACI,kBAAC,IAAMC,SAAP,KACI,qCACA,iFCkBGC,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,KAAlB,QADF,WAEE,kBAAC,IAAD,CAASD,OAAK,EAACC,GAAG,UAAlB,SACA,kBAAC,IAAD,CAAOD,OAAK,EAACE,KAAK,KAChB,yCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SAASC,UAAWN,MCXhCO,EAAQC,YAAYC,EAAaC,YAAgBC,MAEvDC,iBACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.a9239db8.chunk.js","sourcesContent":["const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'GET_TODOS':\r\n            return [\r\n                ...action.todos\r\n            ]\r\n        case 'ADD_TODO':\r\n            return [\r\n                ...state,\r\n                { ...action.todo }\r\n            ]\r\n        case 'UPDATE_TODO':\r\n            let old = state.find(todo => todo.id === action.id)\r\n            return state.map(td => td.id === action.id\r\n                ? { ...old, title: action.title }\r\n                : td)\r\n        case 'TOGGLE_TODO':\r\n            let todo = state.find(todo => todo.id === action.id)\r\n            return state.map(td => td.id === action.id\r\n                ? { ...todo, completed: action.completed }\r\n                : td)\r\n        case 'DELETE_TODO':\r\n            return [...state.filter(td => td.id !== action.id)]\r\n        case 'REQUEST_FAIL':\r\n            // TODO: error handling/displaying could be added.\r\n            console.error('REQUEST_FAIL', action.name, action.details)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default todos\r\n","//const baseUrl = \"https://jsonplaceholder.typicode.com/todos\"\r\nconst baseUrl = \"http://localhost:3000/api/todos\"\r\n\r\nexport const requestFail = (name, details) => ({\r\n    type: 'REQUEST_FAIL',\r\n    name,\r\n    details\r\n})\r\n\r\n// relies on thunk to provide dispatch (and if needed, getState, also)\r\nconst request = ({\r\n    url = baseUrl,\r\n    method = 'GET', \r\n    data,\r\n    okAction,\r\n    failAction = requestFail\r\n    }) => dispatch => \r\n    fetch(url, {\r\n        method: method,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: data && JSON.stringify(data)\r\n    })\r\n    .then(res => {\r\n        if (res.ok) {\r\n            return res.json()\r\n        }\r\n        throw res\r\n    })\r\n    .then(res => dispatch(okAction(res)))\r\n    .catch(error => dispatch(failAction(method + ' ' + url, error)))\r\n\r\nexport const getTodosOk = todos => ({\r\n    type: 'GET_TODOS',\r\n    todos\r\n})\r\n    \r\nexport const getTodos = () => request({\r\n    url: baseUrl + '?_limit=8',\r\n    okAction: getTodosOk\r\n})\r\n\r\nexport const addTodoOk = todo => ({\r\n    type: 'ADD_TODO',\r\n    todo\r\n})\r\n\r\nexport const addTodo = title => request({\r\n    method: 'POST',\r\n    okAction: addTodoOk,\r\n    data : {\r\n        title,\r\n        completed: false\r\n    }\r\n})\r\n\r\nexport const toggleTodoOk = ({id, completed}) => ({\r\n    type: 'TOGGLE_TODO',\r\n    id,\r\n    completed\r\n})\r\n\r\nexport const toggleTodo = (id, completed) => request({\r\n    url: baseUrl + '/' + id,\r\n    method: 'PUT',\r\n    okAction: toggleTodoOk,\r\n    data: {\r\n        completed\r\n    }\r\n})\r\n\r\nexport const updateTodoOk = ({id, title}) => ({\r\n    type: 'UPDATE_TODO',\r\n    id,\r\n    title\r\n})\r\n\r\nexport const updateTodo = (id, title) => request({\r\n    url: baseUrl + '/' + id,\r\n    method: 'PUT',\r\n    okAction: updateTodoOk,\r\n    data: {\r\n        title\r\n    }\r\n})\r\n\r\nexport const deleteTodoOk = id => ({\r\n    type: 'DELETE_TODO',\r\n    id\r\n})\r\n\r\nexport const deleteTodo = id => request({\r\n    url: baseUrl + '/' + id,\r\n    method: 'DELETE',\r\n    okAction: () => deleteTodoOk(id),\r\n    data: {}\r\n})\r\n\r\nexport const setFilter = filter => ({\r\n    type: 'SET_FILTER',\r\n    filter\r\n})\r\n\r\nexport const Filters = {\r\n    SHOW_ALL: 'Show all',\r\n    SHOW_COMPLETED: 'Show completed',\r\n    SHOW_ACTIVE: 'Show active'\r\n}\r\n","import { Filters } from '../actions'\r\n\r\nconst filter = (state = Filters.SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n        case 'SET_FILTER':\r\n            return action.filter\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default filter\r\n","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    todos,\r\n    filter    \r\n})","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n    let input\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault()\r\n                    if (!input.value.trim()) {\r\n                        return\r\n                    }\r\n                    dispatch(addTodo(input.value))\r\n                    input.value = ''\r\n                }}\r\n            >\r\n                { /* Callback Refs:  https://reactjs.org/docs/refs-and-the-dom.html#callback-refs0 */ }\r\n                <input ref={node => (input = node)} />\r\n                <button type=\"submit\">Add Todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// https://react-redux.js.org/api/connect#connect\r\nexport default connect()(AddTodo)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Todo.css'\r\n\r\nexport default class Todo extends Component {\r\n    static propTypes = {\r\n        title: PropTypes.string,\r\n        completed: PropTypes.bool,\r\n        toggleTodo: PropTypes.func,\r\n        updateTodo: PropTypes.func,\r\n        deleteTodo: PropTypes.func\r\n    }\r\n\r\n    state = {\r\n        editing: false,\r\n        title: this.props.title\r\n    }\r\n\r\n    startEdit = () => {\r\n        this.setState({\r\n            editing: true,\r\n            title: this.props.title\r\n        })\r\n    }\r\n\r\n    updateTitle = event => {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    updateTodo = () => {\r\n        this.setState({\r\n            editing: false\r\n        })\r\n        this.props.updateTodo(this.state.title)\r\n    }\r\n\r\n    cancelEdit = () => {\r\n        this.setState({\r\n            editing: false,\r\n            title: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { title, completed, toggleTodo, deleteTodo } = this.props\r\n        return (\r\n            <div>\r\n                {this.state.editing\r\n                    ? <div className=\"todo-editing\">\r\n                        <input type=\"checkbox\" checked={completed} disabled/>\r\n                        <input type=\"text\" value={this.state.title} onChange={this.updateTitle} />\r\n                        <button onClick={this.updateTodo} >update</button>\r\n                        <button onClick={this.cancelEdit} >cancel</button>\r\n                      </div>\r\n                    : <div className=\"todo-row\">\r\n                        <input type=\"checkbox\" checked={completed} onChange={toggleTodo} />\r\n                        <div \r\n                            style={{textDecoration: completed ? 'line-through' : 'none','overflowWrap': 'anywhere'}}\r\n                            onClick={this.startEdit}\r\n                        >\r\n                            {title}\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={deleteTodo} >x</button>\r\n                        </div>\r\n                      </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Todo from './Todo'\r\nimport { getTodos, toggleTodo, updateTodo, deleteTodo, Filters } from '../actions'\r\n\r\nclass TodoList extends Component {\r\n    componentDidMount() {\r\n        const { getTodos } = this.props\r\n        getTodos()\r\n    }\r\n\r\n    render() {\r\n        const { todos, filter, toggleTodo, updateTodo, deleteTodo } = this.props\r\n        \r\n        const filterTodo = (todo) => {\r\n            switch(filter) {\r\n                case Filters.SHOW_COMPLETED:\r\n                    return todo.completed === true\r\n                case Filters.SHOW_ACTIVE:\r\n                    return todo.completed === false\r\n                default:\r\n                    return true            \r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {todos.filter(todo => filterTodo(todo))\r\n                    .map(todo => (\r\n                    <Todo \r\n                        key={todo.id} \r\n                        {...todo} \r\n                        toggleTodo={() => toggleTodo(todo.id, !todo.completed)}\r\n                        updateTodo={title => updateTodo(todo.id, title)}\r\n                        deleteTodo={() => deleteTodo(todo.id)}\r\n                    />\r\n                ))}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: state.todos,\r\n    filter: state.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getTodos: () => dispatch(getTodos()),\r\n    toggleTodo: (id, completed) => dispatch(toggleTodo(id, completed)),\r\n    updateTodo: (id, title) => dispatch(updateTodo(id, title)),\r\n    deleteTodo: id => dispatch(deleteTodo(id))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setFilter, Filters } from '../actions'\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n    return (\r\n        <div>\r\n            {Object.values(Filters).map(ft => (\r\n                <button\r\n                    key={ft}\r\n                    disabled={ft === filter} \r\n                    onClick={() => setFilter(ft)}\r\n                >\r\n                    {ft}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    filter: state.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setFilter: filter => dispatch(setFilter(filter))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>Todo list app v1.0.0 using react, redux and thunk</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\r\nimport './App.css';\r\nimport AddTodo from './components/AddTodo'\r\nimport TodoList from './components/TodoList'\r\nimport Filter from './components/Filter'\r\nimport About from './components/About'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavLink exact to='/'>Hmoe</NavLink>&nbsp;&nbsp;\r\n      <NavLink exact to='/about'>About</NavLink>\r\n      <Route exact path=\"/\">\r\n        <h4>Todo List</h4>\r\n        <Filter />\r\n        <AddTodo />\r\n        <TodoList />\r\n      </Route>\r\n      <Route path=\"/about\" component={About} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\nimport App from './App'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}